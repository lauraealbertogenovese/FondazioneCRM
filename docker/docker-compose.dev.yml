version: "3.8"

services:
  # Database PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: fondazione-crm-postgres
    env_file:
      - ../.env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init:/docker-entrypoint-initdb.d
    networks:
      - crm-network

  # API Gateway
  api-gateway:
    build:
      context: ../backend/api-gateway
      dockerfile: Dockerfile.dev
    container_name: fondazione-crm-api-gateway
    ports:
      - "3001:3001"
    env_file:
      - ../.env
    environment:
      - NODE_ENV=development
      - PORT=3001
    depends_on:
      - postgres
      - auth-service
      - patient-service
      - clinical-service
      - group-service
      - billing-service
    networks:
      - crm-network
    volumes:
      - ../backend/api-gateway:/app
      - /app/node_modules

  # Auth Service
  auth-service:
    build:
      context: ../backend/services/auth
      dockerfile: Dockerfile.dev
    container_name: fondazione-crm-auth-service
    ports:
      - "3002:3002"
    env_file:
      - ../.env
    environment:
      - NODE_ENV=development
      - PORT=3002
    depends_on:
      - postgres
    networks:
      - crm-network
    volumes:
      - ../backend/services/auth:/app
      - /app/node_modules

  # Patient Service
  patient-service:
    build:
      context: ../backend/services/patient
      dockerfile: Dockerfile.dev
    container_name: fondazione-crm-patient-service
    ports:
      - "3003:3003"
    env_file:
      - ../.env
    environment:
      - NODE_ENV=development
      - PORT=3003
    depends_on:
      - postgres
    networks:
      - crm-network
    volumes:
      - ../backend/services/patient:/app
      - /app/node_modules

  # Clinical Service
  clinical-service:
    build:
      context: ../backend/services/clinical
      dockerfile: Dockerfile.dev
    container_name: fondazione-crm-clinical-service
    ports:
      - "3004:3004"
    env_file:
      - ../.env
    environment:
      - NODE_ENV=development
      - PORT=3004
    depends_on:
      - postgres
    networks:
      - crm-network
    volumes:
      - ../backend/services/clinical:/app
      - /app/node_modules

  # Group Service
  group-service:
    build:
      context: ../backend/services/group
      dockerfile: Dockerfile.dev
    container_name: fondazione-crm-group-service
    ports:
      - "3005:3005"
    env_file:
      - ../.env
    environment:
      - NODE_ENV=development
      - PORT=3005
    depends_on:
      - postgres
    networks:
      - crm-network
    volumes:
      - ../backend/services/group:/app
      - /app/node_modules

  # Billing Service
  billing-service:
    build:
      context: ../backend/services/billing
      dockerfile: Dockerfile.dev
    container_name: fondazione-crm-billing-service
    ports:
      - "3006:3006"
    env_file:
      - ../.env
    environment:
      - NODE_ENV=development
      - PORT=3006
    depends_on:
      - postgres
    networks:
      - crm-network
    volumes:
      - ../backend/services/billing:/app
      - /app/node_modules

  # Frontend React
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    container_name: fondazione-crm-frontend
    ports:
      - "3007:3007"
    env_file:
      - ../.env
    environment:
      - NODE_ENV=development
      - PORT=3007
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api-gateway
    networks:
      - crm-network
    volumes:
      - ../frontend:/app
      - /app/node_modules

volumes:
  postgres_data:

networks:
  crm-network:
    driver: bridge
